# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use `alacritty` if it is
  # available, otherwise `xterm-256color` is used.
  TERM: xterm-256color

window:
  decorations: buttonless
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  #dimensions:
    #columns: 400
    #lines: 400

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  #position:
  #  x: 0
  #  y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 15
    y: 5
  dynamic_padding: true

  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  #decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  #startup_mode: Windowed

  # Window title
  window.dynamic_title: true
  startup_mode: Windowed


  # Window class (Linux/BSD only):
    # General application class

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 5000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  #multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  #auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
#tabspaces: 8


# Font configuration
font:
  # Normal (roman) font face
  normal:
    # Font family
    #
    # Default:
    #   - (macOS) Menlo
    #   - (Linux/BSD) monospace
    #   - (Windows) Consolas
    family: SauceCodePro Nerd Font
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    #family: Fira Code
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Regular

  # Bold font face
  bold:
    # Font family
   #
    # If the bold family is not specified, it will fall back to the
    # value specified for the normal font.
    family: SauceCodePro Nerd Font
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    #family: UbuntuMono Nerd Font Mono
    #family: Fira Code
    # family: Monofur Nerd Font
    # family: TerminessTTF Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold

  # Italic font face
  italic:
    # Font family
    #
    # If the italic family is not specified, it will fall back to the
    # value specified for the normal font.
    family: SauceCodePro Nerd Font
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    #family: UbuntuMono Nerd Font Mono
    #family: Fira Code
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Italic

  # Bold italic font face
  bold_italic:
    # Font family
    #
    # If the bold italic family is not specified, it will fall back to the
    # value specified for the normal font.
    family: SauceCodePro Nerd Font Mono
    # family: CodeNewRoman Nerd Font
    # family: RobotoMono Nerd Font
    # family: Hack
    # family: JetBrains Mono
    #family: UbuntuMono Nerd Font Mono
    #family: Fira Code
    # family: Monofuritalic Nerd Font Mono
    # family: TerminessTTF Nerd Font

    # The `style` can be specified to pick a specific face.
    style: Bold Italic

  # Point size
  size: 13.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 1
    y: 1

  glyph_offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  #glyph_offset:
  #  x: 0
  #  y: 0

  # Thin stroke font rendering (macOS only)
  #
  # Thin strokes are suitable for retina displays, but for non-retina screens
  # it is recommended to set `use_thin_strokes` to `false`
  #
  # macOS >= 10.14.x:
  #
  # If the font quality on non-retina display looks bad then set
  # `use_thin_strokes` to `true` and enable font smoothing by running the
  # following command:
  #   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
  #
  # This is a global setting and will require a log out or restart to take
  # effect.
  #use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.

# Base16 Gruvbox dark, soft 256 - alacritty color config
# Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
# Base16 Nord - alacritty color config
# arcticicestudio

# Base16 Nord 256 - alacritty color config
# arcticicestudio

    # Base16 Gruvbox dark, medium 256 - alacritty color config
# Dawid Kurek (dawikur@gmail.com), morhetz (https://github.com/morhetz/gruvbox)
# Copyright (c) 2017-present Arctic Ice Studio <development@arcticicestudio.com>
# Copyright (c) 2017-present Sven Greb <code@svengreb.de>

# Project:    Nord Alacritty
# Version:    0.1.0
# Repository: https://github.com/arcticicestudio/nord-alacritty
# License:    MIT
# References:
#   https://github.com/alacritty/alacritty

#colors:
  #primary:
    #background: '#2e3440'
    #foreground: '#d8dee9'
    #dim_foreground: '#a5abb6'
  #cursor:
    #text: '#2e3440'
    #cursor: '#d8dee9'
  #vi_mode_cursor:
    #text: '#2e3440'
    #cursor: '#d8dee9'
  #selection:
    #text: CellForeground
    #background: '#4c566a'
  #search:
    #matches:
      #foreground: CellBackground
      #background: '#88c0d0'
    #bar:
      #background: '#434c5e'
      #foreground: '#d8dee9'
  #normal:
    #black: '#3b4252'
    #red: '#bf616a'
    #green: '#a3be8c'
    #yellow: '#ebcb8b'
    #blue: '#81a1c1'
    #magenta: '#b48ead'
    #cyan: '#88c0d0'
    #white: '#e5e9f0'
  #bright:
    #black: '#4c566a'
    #red: '#bf616a'
    #green: '#a3be8c'
    #yellow: '#ebcb8b'
    #blue: '#81a1c1'
    #magenta: '#b48ead'
    #cyan: '#8fbcbb'
    #white: '#eceff4'
  #dim:
    #black: '#373e4d'
    #red: '#94545d'
    #green: '#809575'
    #yellow: '#b29e75'
    #blue: '#68809a'
    #magenta: '#8c738c'
    #cyan: '#6d96a5'
    #white: '#aeb3bb'

# ...


# Colors (One Dark)
colors:
  # Default colors
  primary:
    background: '0x1e2127'
    foreground: '0xabb2bf'

  # Normal colors
  normal:
    black:   '0x1e2127'
    red:     '0xe06c75'
    green:   '0x98c379'
    yellow:  '0xd19a66'
    blue:    '0x61afef'
    magenta: '0xc678dd'
    cyan:    '0x56b6c2'
    white:   '0xabb2bf'

  # Bright colors
  bright:
    black:   '0x5c6370'
    red:     '0xe06c75'
    green:   '0x98c379'
    yellow:  '0xd19a66'
    blue:    '0x61afef'
    magenta: '0xc678dd'
    cyan:    '0x56b6c2'
    white:   '0xffffff'

    #colors:
  ## Default colors
  #primary:
    #background: '0x282c34'
    #foreground: '0xbbc2cf'

    ## Bright and dim foreground colors
    ##
    ## The dimmed foreground color is calculated automatically if it is not present.
    ## If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    ## is `false`, the normal foreground color will be used.
    ##dim_foreground: '0x9a9a9a'
    ##bright_foreground: '0xffffff'

  ## Cursor colors
  ##
  ## Colors which should be used to draw the terminal cursor. If these are unset,
  ## the cursor color will be the inverse of the cell color.
  ##cursor:
  ##  text: '0x000000'
  ##  cursor: '0xffffff'

  ## Selection colors
  ##
  ## Colors which should be used to draw the selection area. If selection
  ## background is unset, selection color will be the inverse of the cell colors.
  ## If only text is unset the cell text color will remain the same.
  #selection:
    #text: '0xbbc2cf'
    #background: '0x282c34'

  ## Normal colors
  #normal:
    #black:   '0x1c1f24'
    #red:     '0xff6c6b'
    #green:   '0x98be65'
    #yellow:  '0xda8548'
    #blue:    '0x51afef'
    #magenta: '0xc678dd'
    #cyan:    '0x5699af'
    #white:   '0x202328'

  ## Bright colors
  #bright:
    #black:   '0x5b6268'
    #red:     '0xda8548'
    #green:   '0x4db5bd'
    #yellow:  '0xecbe7b'
    #blue:    '0x3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
    #magenta: '0xa9a1e1'
    #cyan:    '0x46d9ff'
    #white:   '0xdfdfdf'

#colors:
  ## Default colors
  #primary:
    #background: '0x282828'
    #foreground: '0xd5c4a1'

  ## Colors the cursor will use if `custom_cursor_colors` is true
  #cursor:
    #text: '0x282828'
    #cursor: '0xd5c4a1'

  ## Normal colors
  #normal:
    #black:   '0x282828'
    #red:     '0xfb4934'
    #green:   '0xb8bb26'
    #yellow:  '0xfabd2f'
    #blue:    '0x83a598'
    #magenta: '0xd3869b'
    #cyan:    '0x8ec07c'
    #white:   '0xd5c4a1'

  ## Bright colors
  #bright:
    #black:   '0x665c54'
    #red:     '0xfb4934'
    #green:   '0xb8bb26'
    #yellow:  '0xfabd2f'
    #blue:    '0x83a598'
    #magenta: '0xd3869b'
    #cyan:    '0x8ec07c'
    #white:   '0xfbf1c7'

  #indexed_colors:
    #- { index: 16, color: '0xfe8019' }
    #- { index: 17, color: '0xd65d0e' }
    #- { index: 18, color: '0x3c3836' }
    #- { index: 19, color: '0x504945' }
    #- { index: 20, color: '0xbdae93' }
    #- { index: 21, color: '0xebdbb2' }

#colors:
  ## Default colors
  #primary:
    #background: '0x2e3440'
    #foreground: '0xe5e9f0'

  ## Colors the cursor will use if `custom_cursor_colors` is true
  #cursor:
    #text: '0x2e3440'
    #cursor: '0xe5e9f0'

  ## Normal colors
  #normal:
    #black:   '0x2e3440'
    #red:     '0xbf616a'
    #green:   '0xa3be8c'
    #yellow:  '0xebcb8b'
    #blue:    '0x81a1c1'
    #magenta: '0xb48ead'
    #cyan:    '0x88c0d0'
    #white:   '0xe5e9f0'

  ## Bright colors
  #bright:
    #black:   '0x4c566a'
    #red:     '0xbf616a'
    #green:   '0xa3be8c'
    #yellow:  '0xebcb8b'
    #blue:    '0x81a1c1'
    #magenta: '0xb48ead'
    #cyan:    '0x88c0d0'
    #white:   '0x8fbcbb'

  #indexed_colors:
    #- { index: 16, color: '0xd08770' }
    #- { index: 17, color: '0x5e81ac' }
    #- { index: 18, color: '0x3b4252' }
    #- { index: 19, color: '0x434c5e' }
    #- { index: 20, color: '0xd8dee9' }
    #- { index: 21, color: '0xeceff4' }
#colors:
  ## Default colors
  #primary:
    #background: '0x2e3440'
    #foreground: '0xe5e9f0'

  ## Colors the cursor will use if `custom_cursor_colors` is true
  #cursor:
    #text: '0x2e3440'
    #cursor: '0xe5e9f0'

  ## Normal colors
  #normal:
    #black:   '0x2e3440'
    #red:     '0xbf616a'
    #green:   '0xa3be8c'
    #yellow:  '0xebcb8b'
    #blue:    '0x81a1c1'
    #magenta: '0xb48ead'
    #cyan:    '0x88c0d0'
    #white:   '0xe5e9f0'

  ## Bright colors
  #bright:
    #black:   '0x4c566a'
    #red:     '0xd08770'
    #green:   '0x3b4252'
    #yellow:  '0x434c5e'
    #blue:    '0xd8dee9'
    #magenta: '0xeceff4'
    #cyan:    '0x5e81ac'
    #white:   '0x8fbcbb'

#draw_bold_text_with_bright_colors: false
#colors:
  ## Default colors
  #primary:
    #background: '0x32302f'
    #foreground: '0xd5c4a1'

  ## Colors the cursor will use if `custom_cursor_colors` is true
  #cursor:
    #text: '0x32302f'
    #cursor: '0xd5c4a1'

  ## Normal colors
  #normal:
    #black:   '0x32302f'
    #red:     '0xfb4934'
    #green:   '0xb8bb26'
    #yellow:  '0xfabd2f'
    #blue:    '0x83a598'
    #magenta: '0xd3869b'
    #cyan:    '0x8ec07c'
    #white:   '0xd5c4a1'

  ## Bright colors
  #bright:
    #black:   '0x665c54'
    #red:     '0xfb4934'
    #green:   '0xb8bb26'
    #yellow:  '0xfabd2f'
    #blue:    '0x83a598'
    #magenta: '0xd3869b'
    #cyan:    '0x8ec07c'
    #white:   '0xfbf1c7'

  #indexed_colors:
    #- { index: 16, color: '0xfe8019' }
    #- { index: 17, color: '0xd65d0e' }
    #- { index: 18, color: '0x3c3836' }
    #- { index: 19, color: '0x504945' }
    #- { index: 20, color: '0xbdae93' }
    #- { index: 21, color: '0xebdbb2' }
#colors:
  ## Default colors
  #primary:
    #background: '0x1d2021'
    #foreground: '0xd5c4a1'

  ## Colors the cursor will use if `custom_cursor_colors` is true
  #cursor:
    #text: '0x1d2021'
    #cursor: '0xd5c4a1'

  ## Normal colors
  #normal:
    #black:   '0x1d2021'
    #red:     '0xfb4934'
    #green:   '0xb8bb26'
    #yellow:  '0xfabd2f'
    #blue:    '0x83a598'
    #magenta: '0xd3869b'
    #cyan:    '0x8ec07c'
    #white:   '0xd5c4a1'

  ## Bright colors
  #bright:
    #black:   '0x665c54'
    #red:     '0xfe8019'
    #green:   '0x3c3836'
    #yellow:  '0x504945'
    #blue:    '0xbdae93'
    #magenta: '0xebdbb2'
    #cyan:    '0xd65d0e'
    #white:   '0xfbf1c7'

#draw_bold_text_with_bright_colors: false
#draw_bold_text_with_bright_colors: true

## Colors (Tomorrow Night Bright)
#colors:
  ## Default colors
  #primary:
    #background: '0x282c34'
    #foreground: '0xbbc2cf'

    ## Bright and dim foreground colors
    ##
    ## The dimmed foreground color is calculated automatically if it is not present.
    ## If the bright foreground color is not set, or `draw_bold_text_with_bright_colors`
    ## is `false`, the normal foreground color will be used.
    ##dim_foreground: '0x9a9a9a'
    ##bright_foreground: '0xffffff'

  ## Cursor colors
  ##
  ## Colors which should be used to draw the terminal cursor. If these are unset,
  ## the cursor color will be the inverse of the cell color.
  ##cursor:
  ##  text: '0x000000'
  ##  cursor: '0xffffff'

  ## Selection colors
  ##
  ## Colors which should be used to draw the selection area. If selection
  ## background is unset, selection color will be the inverse of the cell colors.
  ## If only text is unset the cell text color will remain the same.
  #selection:
    #text: '0xbbc2cf'
    #background: '0x282c34'

  ## Normal colors
  #normal:
    #black:   '0x1c1f24'
    #red:     '0xff6c6b'
    #green:   '0x98be65'
    #yellow:  '0xda8548'
    #blue:    '0x51afef'
    #magenta: '0xc678dd'
    #cyan:    '0x5699af'
    #white:   '0x202328'

  ## Bright colors
  #bright:
    #black:   '0x5b6268'
    #red:     '0xda8548'
    #green:   '0x4db5bd'
    #yellow:  '0xecbe7b'
    #blue:    '0x3071db'   # This is 2257a0 in Doom Emacs but I lightened it.
    #magenta: '0xa9a1e1'
    #cyan:    '0x46d9ff'
    #white:   '0xdfdfdf'

  # Dim colors
  #
  # If the dim colors are not set, they will be calculated automatically based
  # on the `normal` colors.
  #dim:
  #  black:   '0x000000'
  #  red:     '0x8c3336'
  #  green:   '0x7a8530'
  #  yellow:  '0x97822e'
  #  blue:    '0x506d8f'
  #  magenta: '0x80638e'
  #  cyan:    '0x497e7a'
  #  white:   '0x9a9a9a'

  # Indexed Colors
  #
  # The indexed colors include all colors from 16 to 256.
  # When these are not set, they're filled with sensible defaults.
  #
  # Example:
  #   `- { index: 16, color: '0xff00ff' }`
  #
  #indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '0xffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 0.95
# background_opacity: 0.95

#selection:
  #semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  #save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

#cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  #style: Block

  # If this is `true`, the cursor will be rendered as a hollow box when the
  # window is not focused.
  #unfocused_hollow: true

# Live config reload (changes require restart)
#live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
#shell:
#  program: /bin/bash
#  args:
#    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#debug:
  # Display the time it takes to redraw each frame.
  #render_timer: false

  # Keep the log file after quitting Alacritty.
  #persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  #log_level: Warn

  # Print all received window events.
  #print_events: false

  # Record all characters and escape sequences as test data.
  #ref_test: false

#mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }

  # If this is `true`, the cursor is temporarily hidden when typing.
  #hide_when_typing: false

  #url:
    # URL launcher
    #
    # This program is executed when clicking on a text which is recognized as a URL.
    # The URL is always added to the command as the last parameter.
    #
    # When set to `None`, URL launching will be disabled completely.
    #
    # Default:
    #   - (macOS) open
    #   - (Linux/BSD) xdg-open
    #   - (Windows) explorer
    #launcher:
    #  program: xdg-open
    #  args: []

    # URL modifiers
    #
    # These are the modifiers that need to be held down for opening URLs when clicking
    # on them. The available modifiers are documented in the key binding section.
    #modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.


cursor:
  # Cursor style
  #
  # Values for 'style':
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Beam
